<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.taskStu.EtAnalyseMapper">
  <resultMap id="BaseResultMap" type="com.vo.taskStu.EtAnalyse">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="ANALYSE_TYPE" jdbcType="VARCHAR" property="analyseType" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="CREATE_USER" jdbcType="VARCHAR" property="createUser" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_USER" jdbcType="VARCHAR" property="updateUser" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="TERM" jdbcType="LONGVARCHAR" property="term" />
    <result column="CONTENT" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, USER_ID, ANALYSE_TYPE, TITLE, CREATE_USER, CREATE_TIME, UPDATE_USER, UPDATE_TIME, TERM, CONTENT
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from et_analyse
    where ID = #{id,jdbcType=VARCHAR}
  </select>

    <select id="selectByType" parameterType="com.vo.taskStu.EtAnalyse" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from et_analyse
        where USER_ID = #{userId,jdbcType=VARCHAR}
        and ANALYSE_TYPE = #{analyseType,jdbcType=VARCHAR}
        order by UPDATE_TIME desc
    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from et_analyse
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.vo.taskStu.EtAnalyse">
    insert into et_analyse (ID, USER_ID, ANALYSE_TYPE, 
      TITLE, CREATE_USER, CREATE_TIME, 
      UPDATE_USER, UPDATE_TIME, TERM, 
      CONTENT)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{analyseType,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{term,jdbcType=LONGVARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.vo.taskStu.EtAnalyse">
    insert into et_analyse
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="analyseType != null">
        ANALYSE_TYPE,
      </if>
      <if test="title != null">
        TITLE,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="term != null">
        TERM,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="analyseType != null">
        #{analyseType,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="term != null">
        #{term,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vo.taskStu.EtAnalyse">
    update et_analyse
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="analyseType != null">
        ANALYSE_TYPE = #{analyseType,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        CREATE_USER = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="term != null">
        TERM = #{term,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vo.taskStu.EtAnalyse">
    update et_analyse
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ANALYSE_TYPE = #{analyseType,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      TERM = #{term,jdbcType=LONGVARCHAR},
      CONTENT = #{content,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vo.taskStu.EtAnalyse">
    update et_analyse
    set USER_ID = #{userId,jdbcType=VARCHAR},
      ANALYSE_TYPE = #{analyseType,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      CREATE_USER = #{createUser,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_USER = #{updateUser,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>